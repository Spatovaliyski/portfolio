{"version":3,"file":"main.min.js","mappings":"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","sources":["webpack://TavernSlider/./assets/src/scripts/components/slider.js","webpack://TavernSlider/webpack/bootstrap","webpack://TavernSlider/webpack/runtime/define property getters","webpack://TavernSlider/webpack/runtime/hasOwnProperty shorthand","webpack://TavernSlider/./assets/src/scripts/scripts.js"],"sourcesContent":["let Slider = (function () {\r\n  let activeIndex = 0;\r\n  let slides = [];\r\n  let startX = 0;\r\n  let isDragging = false;\r\n\r\n  /**\r\n   * Initialize the component\r\n   */\r\n  let _init = () => {\r\n    setTimeout(() => {\r\n      _updateSlides();\r\n      _setupEventListeners();\r\n      _startChangeDetection();\r\n    }, 1000);\r\n  };\r\n\r\n  /**\r\n   * Update slider on drag by adding/subtracting from a simple Index\r\n   */\r\n  let _updateSlides = function () {\r\n    slides = Array.from(document.querySelectorAll('.tavern-slider__item'));\r\n  \r\n    const track = document.querySelector('.tavern-slider__slider-wrapper');\r\n    const trackWidth = track.offsetWidth;\r\n\r\n    const offset = 16;\r\n    const totalOffset = activeIndex * offset;\r\n    track.style.transform = `translateX(${-activeIndex * trackWidth - totalOffset}px)`;\r\n  \r\n    slides.forEach((slide, index) => {\r\n      if (index === activeIndex) {\r\n        slide.classList.remove('is-active', 'fade-out');\r\n        slide.offsetHeight; // Triggers reflow\r\n        slide.classList.add('is-active');\r\n      } else {\r\n        slide.classList.add('fade-out');\r\n        setTimeout(() => {\r\n          slide.classList.remove('is-active');\r\n          slide.classList.remove('fade-out');\r\n        }, 1000);\r\n      }\r\n    });\r\n  \r\n    _setPostPosition();\r\n  };\r\n    \r\n  /**\r\n   * Handles dragging and swiping\r\n   */\r\n  let _setupEventListeners = function () {\r\n    slides.forEach((slide, index) => {\r\n      slide.addEventListener('mousedown', _startDrag);\r\n      slide.addEventListener('mousemove', _drag);\r\n      slide.addEventListener('mouseup', _endDrag);\r\n      slide.addEventListener('mouseleave', _cancelDrag);\r\n    });\r\n\r\n    // Touch events for mobile\r\n    slides.forEach((slide, index) => {\r\n      slide.addEventListener('touchstart', _startDrag);\r\n      slide.addEventListener('touchmove', _drag);\r\n      slide.addEventListener('touchend', _endDrag);\r\n    });\r\n\r\n    // Arrow click events\r\n    const nextArrow = document.querySelector('.tavern-slider__control.next');\r\n    const prevArrow = document.querySelector('.tavern-slider__control.prev');\r\n\r\n    nextArrow.addEventListener('click', _handleNextArrowClick);\r\n    prevArrow.addEventListener('click', _handlePrevArrowClick);\r\n\r\n    // Arrow key events\r\n    document.addEventListener('keydown', function(event) {\r\n      switch (event.key) {\r\n        case 'ArrowLeft':\r\n          _handlePrevArrowClick();\r\n          break;\r\n        case 'ArrowRight':\r\n          _handleNextArrowClick();\r\n          break;\r\n      }\r\n    });\r\n\r\n    _updateSlides();\r\n  };\r\n\r\n  let _startDrag = function (e) {\r\n    isDragging = true;\r\n    startX = e.type === 'touchstart' ? e.touches[0].clientX : e.clientX;\r\n  };\r\n\r\n  let _drag = function (e) {\r\n    if (!isDragging) return;\r\n    const currentX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\r\n    const difference = currentX - startX;\r\n\r\n    if (difference > 50) {\r\n      _handlePrevArrowClick();\r\n      isDragging = false;\r\n    }\r\n    else if (difference < -50) {\r\n      _handleNextArrowClick();\r\n      isDragging = false;\r\n    }\r\n  };\r\n\r\n  let _endDrag = function (e) {\r\n    isDragging = false;\r\n  };\r\n\r\n  let _cancelDrag = function (e) {\r\n    isDragging = false;\r\n  };\r\n\r\n  /**\r\n   * Drag => Position Left\r\n   */\r\n  let _handlePrevArrowClick = function () {\r\n    activeIndex--;\r\n\r\n    if (0 > activeIndex) {\r\n      activeIndex = slides.length - 1;\r\n    }\r\n\r\n    _updateSlides();\r\n  };\r\n\r\n  /**\r\n   * Drag => Position Right\r\n   */\r\n  let _handleNextArrowClick = function () {\r\n    activeIndex++;\r\n\r\n    if (activeIndex >= slides.length) {\r\n      activeIndex = 0;\r\n    }\r\n\r\n    _updateSlides();\r\n  };\r\n\r\n  /**\r\n   * Check for changes in the slider and reinitialize if necessary\r\n   */\r\n  let _checkForChanges = function () {\r\n    const newSlides = Array.from(document.querySelectorAll('.tavern-slider__item'));\r\n\r\n    // Check if the number of slides has changed\r\n    if (newSlides.length !== slides.length) {\r\n      // Number of slides has changed, reinitialize the slider\r\n      slides = newSlides;\r\n\r\n      activeIndex = 0;\r\n      \r\n      _updateSlides();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Start detecting changes in the slider\r\n   */\r\n    let _startChangeDetection = function () {\r\n      // Use MutationObserver to detect changes in the DOM\r\n      const observer = new MutationObserver(_checkForChanges);\r\n  \r\n      // Observe changes in the parent element of slides\r\n      const parentElement = document.querySelector('.tavern-slider__slider-wrapper');\r\n      observer.observe(parentElement, { childList: true, subtree: true });\r\n    };\r\n\r\n  /**\r\n   * Display the amount of posts and which post the target is in\r\n   */\r\n  let _setPostPosition = function () {\r\n    const index = activeIndex + 1;\r\n    const amount = slides.length;\r\n    const currentPost = document.querySelector('.tavern-slider__controls .current-post');\r\n    const totalPosts = document.querySelector('.tavern-slider__controls .total-posts');\r\n\r\n    currentPost.textContent = index;\r\n    totalPosts.textContent = amount;\r\n  };\r\n\r\n  return {\r\n    init: function () {\r\n      _init();\r\n    }\r\n  }\r\n})();\r\n\r\nexport default Slider;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import Slider from \"./components/slider\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  // Let everything load in first, the slider logic can trigger a little bit after\r\n  setTimeout(() => {\r\n    Slider.init();\r\n  }, 1000);\r\n});"],"names":["activeIndex","slides","startX","isDragging","_updateSlides","_setupEventListeners","_startDrag","_drag","_endDrag","_cancelDrag","_handlePrevArrowClick","_handleNextArrowClick","_checkForChanges","_startChangeDetection","_setPostPosition","Array","from","document","querySelectorAll","track","querySelector","trackWidth","offsetWidth","totalOffset","style","transform","concat","forEach","slide","index","classList","remove","offsetHeight","add","setTimeout","addEventListener","nextArrow","prevArrow","event","key","e","type","touches","clientX","difference","length","newSlides","observer","MutationObserver","parentElement","observe","childList","subtree","amount","currentPost","totalPosts","textContent","init","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Slider"],"sourceRoot":""}